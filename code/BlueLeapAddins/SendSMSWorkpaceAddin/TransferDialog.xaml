<Window x:Class="BlueLeap.Addins.SMS.TransferDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converters="clr-namespace:BlueLeap.Addin.Converters" 
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        Title="{Binding Caption}" Height="420" Width="259" ResizeMode="NoResize" ShowInTaskbar="False" WindowStartupLocation="CenterOwner">
    <Window.Resources>
        <ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:Themes="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero">
            <Style TargetType="TextBlock">
                <Setter Property="FontFamily" Value="Segoe UI"/>
            </Style>
            <Style x:Key="ButtonFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ButtonNormalBorder" Color="#FF707070"/>
            <Style x:Key="MediaBarButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Transparent"/>
                <Setter Property="BorderThickness" Value="0"/>
                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                <Setter Property="HorizontalContentAlignment" Value="Center"/>
                <Setter Property="VerticalContentAlignment" Value="Center"/>
                <Setter Property="Padding" Value="1"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border x:Name="Background" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="#0C000000"/>
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" TargetName="Background" Value="#26000000"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="#ADADAD"/>
                                    <Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxFocusVisual">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Rectangle Margin="4,4,21,4" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="ButtonNormalBackground" EndPoint="0,1" StartPoint="0,0">
                <GradientStop Color="#F3F3F3" Offset="0"/>
                <GradientStop Color="#EBEBEB" Offset="0.5"/>
                <GradientStop Color="#DDDDDD" Offset="0.5"/>
                <GradientStop Color="#CDCDCD" Offset="1"/>
            </LinearGradientBrush>
            <Geometry x:Key="DownArrowGeometry">M 0 0 L 3.5 4 L 7 0 Z</Geometry>
            <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Grid HorizontalAlignment="Stretch" Background="Transparent">
                                <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Gray" HorizontalAlignment="Right" Margin="0,1,7,0" VerticalAlignment="Center"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Fill" TargetName="Arrow" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <LinearGradientBrush x:Key="TextBoxBorder" EndPoint="0,20" MappingMode="Absolute" StartPoint="0,0">
                <GradientStop Color="#ABADB3" Offset="0.05"/>
                <GradientStop Color="#E2E3EA" Offset="0.07"/>
                <GradientStop Color="#E3E9EF" Offset="1"/>
            </LinearGradientBrush>
            <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="AllowDrop" Value="true"/>
                <Setter Property="MinWidth" Value="0"/>
                <Setter Property="MinHeight" Value="0"/>
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type TextBox}">
                            <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
                <Setter Property="OverridesDefaultStyle" Value="true"/>
                <Setter Property="IsTabStop" Value="false"/>
                <Setter Property="Focusable" Value="false"/>
                <Setter Property="ClickMode" Value="Press"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                            <Path x:Name="Arrow" Data="{StaticResource DownArrowGeometry}" Fill="Black" HorizontalAlignment="Center" Margin="0,1,0,0" VerticalAlignment="Center"/>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsChecked" Value="true">
                                    <!--<Setter Property="RenderPressed" TargetName="Chrome" Value="true"/>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Fill" TargetName="Arrow" Value="#AFAFAF"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
                <Grid x:Name="Placement" SnapsToDevicePixels="true">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom">
                        <Border x:Name="DropDownBorder" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </Popup>
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    <ToggleButton Grid.Column="1" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <Trigger Property="IsKeyboardFocusWithin" Value="true">
                        <Setter Property="Foreground" Value="Black"/>
                    </Trigger>
                    <Trigger Property="IsDropDownOpen" Value="true">

                    </Trigger>
                    <Trigger Property="HasItems" Value="false">
                        <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        <Setter Property="Background" Value="#FFF4F4F4"/>
                    </Trigger>
                    <Trigger Property="IsGrouping" Value="true">
                        <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                    </Trigger>
                    <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">

                    </Trigger>
                    <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                        <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                        <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                    </Trigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

            <Style x:Key="MediaBarComboBox" TargetType="{x:Type ComboBox}">
                <Setter Property="FocusVisualStyle" Value="{StaticResource ComboBoxFocusVisual}"/>
                <Setter Property="Foreground" Value="Black"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="Gray"/>
                <Setter Property="BorderThickness" Value="1"/>
                <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
                <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
                <Setter Property="Padding" Value="4,3"/>
                <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
                <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
                <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBox}">
                            <Grid x:Name="MainGrid" SnapsToDevicePixels="true">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                                </Grid.ColumnDefinitions>
                                <Border x:Name="MainBorder" BorderThickness="1" BorderBrush="Transparent" Grid.ColumnSpan="2"/>
                                <Popup x:Name="PART_Popup" MinWidth="{Binding ActualWidth, ElementName=MainBorder}" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"  PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}" Placement="Bottom" RenderTransformOrigin="0.5,0.5">
                                    <Border x:Name="DropDownBorder" BorderBrush="Black" BorderThickness="1" Background="White">
                                        <ScrollViewer x:Name="DropDownScrollViewer" HorizontalAlignment="Stretch" HorizontalScrollBarVisibility="Hidden">
                                            <Grid RenderOptions.ClearTypeHint="Enabled">
                                                <Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                                    <Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" MinWidth="{Binding ActualWidth, ElementName=MainBorder}"/>
                                                </Canvas>
                                                <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                            </Grid>
                                        </ScrollViewer>
                                    </Border>
                                </Popup>
                                <ToggleButton x:Name="ToggleButton" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}"/>
                                <ContentPresenter 
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" 
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" 
                            Content="{TemplateBinding SelectionBoxItem}" 
                            ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" 
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                            IsHitTestVisible="false" Margin="{TemplateBinding Padding}" 
                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                                </Trigger>
                                <Trigger Property="HasItems" Value="false">
                                    <Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                    <Setter Property="Background" Value="#FFF4F4F4"/>
                                </Trigger>
                                <Trigger Property="IsGrouping" Value="true">
                                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                                </Trigger>
                                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                                    <Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                                    <Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                                </Trigger>
                                <Trigger Property="IsMouseOver" SourceName="MainGrid" Value="True">
                                    <Setter Property="BorderBrush" TargetName="MainBorder" Value="Black"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="BorderBrush" TargetName="MainBorder" Value="Transparent"/>
                                    <Setter Property="Background" TargetName="MainGrid" Value="Transparent"/>
                                    <Setter Property="Background" TargetName="ToggleButton" Value="Transparent"/>
                                </Trigger>
                                <Trigger Property="IsOpen" SourceName="PART_Popup" Value="True">
                                    <Setter Property="BorderThickness" TargetName="MainBorder" Value="1,1,1,0"/>
                                    <Setter Property="BorderBrush" TargetName="MainBorder" Value="Black"/>
                                    <Setter Property="Background" TargetName="MainGrid" Value="Transparent"/>
                                    <Setter Property="Background" TargetName="ToggleButton" Value="Transparent"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsEditable" Value="true">
                        <Setter Property="BorderBrush" Value="{StaticResource TextBoxBorder}"/>
                        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"/>
                        <Setter Property="IsTabStop" Value="false"/>
                        <Setter Property="Padding" Value="3"/>
                        <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="MediaBarComboBoxContent" TargetType="{x:Type ComboBoxItem}">
                <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Padding" Value="3,0,3,0"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                            <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                                <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter Property="Background" TargetName="Bd" Value="LightGray"/>
                                    <!--<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>-->
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <SolidColorBrush x:Key="ApplicationSemiSubtleBrush" Color="#FFBDBDBD" Opacity="0.8"/>
            <System:Double x:Key="ApplicationFontSizeSmall">12</System:Double>
            <System:Double x:Key="ApplicationFontSizeMediumLarge">25.333</System:Double>
            <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition/>
            <RowDefinition Height="57"/>
        </Grid.RowDefinitions>
        <TextBlock Text="{Binding Caption}" 
                   Height="30"
                   VerticalAlignment="Top"
                   FontFamily="Segoe UI" 
                   FontSize="22" 
                   Margin="10,10,10,0"/>
        <TextBlock Text="Please type the destination number using the dial pad." 
                   FontSize="12"
                   TextWrapping="Wrap"
                   Margin="10,38,10,12"
                   Foreground="Gray"/>
        <TextBlock Name="error" FontSize="12" Focusable="True"
                   TextWrapping="Wrap"
                   Margin="3"
                   Grid.Row="1"
                   Foreground="Red"
                   Visibility="{Binding ShowWebErrorLabel, Converter={StaticResource BooleanToVisibilityConverter}, Mode=TwoWay}" 
                   Text="{Binding ErrorText,UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                   />
        <ComboBox Visibility="{Binding IsWebRTCCall, Converter={StaticResource BooleanToVisibilityConverter}}" BorderBrush="Black" BorderThickness="1" Grid.Row="2" x:Name="comboBox" HorizontalAlignment="Left" Margin="10,5,5,0" VerticalAlignment="Top" Width="55" IsReadOnly="True" Height="30" 
                  ItemsSource="{Binding CountryCodeList}"
                  SelectedItem="{Binding SelectedCountryCode}"
                  VerticalContentAlignment="Center"
                  HorizontalContentAlignment="Center"
                  />
        <TextBox Grid.Row="2" 
                  Name="cbTargetNumber"
                  Style="{x:Null}"
                  VerticalAlignment="Top"
                  Margin="{Binding DestinationNumberMargin}"                  
                  Text="{Binding UserInput,UpdateSourceTrigger=PropertyChanged}" 
                  Height="30" PreviewTextInput="NumberValidationTextBox"
                  BorderBrush="Black" BorderThickness="1"
                 IsReadOnly="{Binding IsWebRTCCall}"
                 >
            <TextBox.InputBindings>
                <KeyBinding Key="Enter"    Command="{Binding AcceptCommand}" />
                <KeyBinding Key="Escape"    Command="{Binding CancelCommand}" />
            </TextBox.InputBindings>
        </TextBox>
        <Grid Grid.Row="3" Width="250" HorizontalAlignment="Center" Margin="2,0,1,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="42"/>
                <RowDefinition Height="42"/>
                <RowDefinition Height="42"/>
                <RowDefinition Height="42"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="1"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="1" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>

            <Button Style="{StaticResource MediaBarButtonStyle}" Grid.Column="1" Grid.Row="0" Margin="3"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="2"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="2" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="ABC" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="2" Grid.Row="0"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="3"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="3" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="DEF" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>

            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="0" Grid.Row="1"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="4"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="4" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="GHI" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="1" Grid.Row="1"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="5"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="5" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="JKL" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="2" Grid.Row="1"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="6"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="6" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="MNO" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="0" Grid.Row="2"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="7"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="7" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="PQRS" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="1" Grid.Row="2"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="8"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="8" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="TUV" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="2" Grid.Row="2"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="9"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="9" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="WXYZ" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="0" Grid.Row="3"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="*"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <TextBlock Text="*" FontSize="45" VerticalAlignment="Center" Height="50"></TextBlock>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="1" Grid.Row="3"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="0"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="0" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                    <TextBlock Text="+" Width="32" FontSize="{StaticResource ApplicationFontSizeSmall}" 
                               VerticalAlignment="Center" 
                               Margin="5" 
                               Foreground="{StaticResource ApplicationSemiSubtleBrush}"></TextBlock>
                </StackPanel>
            </Button>
            <Button Style="{StaticResource MediaBarButtonStyle}" Margin="3"  Grid.Column="2" Grid.Row="3"
                    Command="{Binding DigitInputCommand}"
                    CommandParameter="#"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="#" FontSize="{StaticResource ApplicationFontSizeMediumLarge}" VerticalAlignment="Center"></TextBlock>
                </StackPanel>
            </Button>
        </Grid>
        <StackPanel Orientation="Horizontal" Grid.Row="3" HorizontalAlignment="Right"/>
        <Button Style="{StaticResource MediaBarButtonStyle}" Margin="10,14,173,17"
                    Height="26"
                    Command="{Binding AcceptCommand}"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1" Content="_Dial" Grid.Row="4"/>
        <Button Style="{StaticResource MediaBarButtonStyle}" Margin="174,14,9,17"
                    Height="26"
                    Command="{Binding CancelCommand}"
                    BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1" Content="_Cancel" Grid.Row="4"/>
        <Button Style="{StaticResource MediaBarButtonStyle}" Margin="92,14,91,17"
            Height="26"
            Command="{Binding ClearCommand}"
            BorderBrush="{StaticResource ButtonNormalBorder}" BorderThickness="1" Content="_Clear" Grid.Row="4"/>

    </Grid>
</Window>
